GIT Homework 1
Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub
Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.
Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash
Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.
 5. Клонировать репозиторий JSON на локальный компьютер.
 git clone https://github.com/dashenkan/JSON.git
 6. Внутри локального JSON создать файл “new.json”.
 cd JSON
 touch new.json
 7. Добавить файл под гит.
 git add .
 8. Закоммитить файл.
 git commit -m "createNewJson"
 9. Отправить файл на внешний GitHub репозиторий.
 git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 cat >> "new.json"
 {
    "first name": "Olga",
    "last name": "Popova",
    "age": 29,
    "count of animal": "2",
    "sallary": 1 000 000
 }

 11. Отправить изменения на внешний репозиторий.
 git commit -am "add info about Olga"
 git push
 12. Создать файл preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
 touch skills.json
 {
	"1": "Terminal",
	"2": "Git",
	"3": "SQL",
	"4": "Postman",
	
}
 15. Отправить сразу 2 файла на внешний репозиторий.
 git add .
 git commit -m "create preferencces and skills"
 git push
 
 16. На веб интерфейсе создать файл bug_report.json.

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 20. Синхронизировать внешний и локальный репозиторий JSON
 git pull


XML
 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер.
 git clone https://github.com/dashenkan/XML.git
 23. Внутри локального XML создать файл “new.xml”.
 cd XML
 touch new.xml
 24. Добавить файл под гит.
 git add .
 25. Закоммитить файл.
 git commit -m "create new.xml"
 26. Отправить файл на внешний GitHub репозиторий.
 git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 <person>
	<name>Федорова Юлия Сергеевна</name>
	<age>39</age>
	<pets_count>1</pets_count>
	<salary>1999999</salary>

	
</person>
 28. Отправить изменения на внешний репозиторий.
 git commit -am "add info about person"
 git push
 29. Создать файл preferences.xml
 touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
<preferences>
	<film>Холодное Сердце</film>
	<serias>Хороший доктор</serias>
	<food>Картошка-фри</food>
	<season>Осень</season>
	<country>Норвегия</country>
</preferences>
31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
touch skills.xml

 32. Сделать коммит в одну строку.
 git add .
 git commit -m "create preferencec and skills"
 33. Отправить сразу 2 файла на внешний репозиторий.
 git push
 34. На веб интерфейсе создать файл bug_report.xml.

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML
